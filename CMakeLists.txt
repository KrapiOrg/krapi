cmake_minimum_required(VERSION 3.23)
project(krapi)

set(CMAKE_CXX_STANDARD 20)
add_compile_options("-Wno-error=unused-but-set-variable")
add_compile_options("-Wno-error=strict-prototypes")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -stdlib=libc++ -lc++abi")

# set up libraries
set(JSON_ImplicitConversions OFF)
set(JSON_DisableEnumSerialization ON)
add_subdirectory(libs/json)
add_subdirectory(libs/fmt)
set(SPDLOG_FMT_EXTERNAL ON)
add_subdirectory(libs/spdlog)
set(CRYPTOPP_USE_MASTER_BRANCH TRUE)
add_subdirectory(libs/cryptopp-cmake)
add_subdirectory(libs/eventpp)
set(CMAKE_POLICY_DEFAULT_CMP0077 NEW)
set(NO_MEDIA ON)
set(NO_EXAMPLES ON)
set(NO_TESTS ON)
add_subdirectory(libs/libdatachannel)
set(MERKLECPP_TRACE_ENABLED ON)
add_subdirectory(libs/merklecpp)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/libs/stduuid/cmake")
set(UUID_SYSTEM_GENERATOR ON)
add_subdirectory(libs/stduuid)
set(LEVELDB_BUILD_TESTS OFF)
set(LEVELDB_BUILD_BENCHMARKS OFF)
add_subdirectory(libs/leveldb)
add_subdirectory(libs/concurrencpp)

# General Includes
include_directories(src/Utils)
include_directories(src/Servers/ServerUtils)
include_directories(src/SharedModels)
include_directories(src/BlockchainModels)
include_directories(src/TransactionPool)
include_directories(src/NodeManager)
include_directories(src/Event)

include(src/Utils/CMakeLists.txt)
include(src/Servers/Signaling/CMakeLists.txt)
include(src/Servers/SignalingClient/CMakeLists.txt)
include(src/Servers/Node/CMakeLists.txt)
include(src/Servers/ObserverNode/CMakeLists.txt)
include(src/Servers/LightNode/CMakeLists.txt)
include(src/SharedModels/CMakeLists.txt)
include(src/BlockchainModels/CMakeLists.txt)
include(src/TransactionPool/CMakeLists.txt)
include(src/NodeManager/CMakeLists.txt)
include(src/Event/CMakeLists.txt)
